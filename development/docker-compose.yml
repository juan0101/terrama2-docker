version: "3.7"

services:

  # TerraMA2 Web Application
  webapp:
    image: marcelopilatti/terrama2-ubuntu-16-04:1.0
    container_name: "${WEBAPP_NAME}"
    working_dir: /opt/terrama2/codebase/webapp/
    restart: always
    ports:
      - "${WEBAPP_PORT}:36000"
      - "${WEBAPP_DEBUG_PORT}:5858"
    environment:
      - "DISPLAY=$DISPLAY"
    volumes:
      - "${SHARED_DATA_VOL}:/shared-data"
      - "${TERRAMA2_DIR}:/opt/terrama2/"
      - /tmp/.X11-unix:/tmp/.X11-unix
    command: > 
      bash -c "npm install && grunt && npm run dev"
    networks:
      - net

  # TerraMA2 Web Monitor
  webmonitor:
    image: marcelopilatti/terrama2-ubuntu-16-04:1.0
    container_name: "${WEBMONITOR_NAME}"
    working_dir: /opt/terrama2/codebase/webmonitor/
    restart: always
    ports:
      - "${WEBMONITOR_PORT}:36001"
      - "${WEBMONITOR_DEBUG_PORT}:5858"
    depends_on:
      - webapp
    volumes:
      - "${SHARED_DATA_VOL}:/shared-data"
      - "${TERRAMA2_DIR}:/opt/terrama2/"
    command: > 
      bash -c "cd /opt/terrama2/codebase/webcomponents/ && npm install && grunt && cd /opt/terrama2/codebase/webmonitor/ && npm install && grunt && npm run dev"
    networks:
      - net
    links:
      - webapp

  # TerraMA2 Report server
  report_server:
    build:
      context: .
      dockerfile: report/report_server/Dockerfile
    image: terrama2_report_server
    working_dir: /app
    container_name: "${REPORT_SERVER_NAME}"
    restart: "always"
    environment:
      - "NODE_ENV=${REPORT_SERVER_NODE_ENV}"
    volumes:
      - "${SHARED_DATA_VOL}:/shared-data"
      - "${REPORT_SERVER_DIR}:/app"
    ports:
      - "${REPORT_SERVER_PORT}:3200"
      - "${REPORT_SERVER_DEBUG_PORT}:5858"
    command: > 
      bash -c "npm install && npm run dev"
    networks:
      - net

  # TerraMA2 Report client
  report_client:
    build: 
      context: .
      dockerfile: report/report_client/Dockerfile
    image: terrama2_report_client
    working_dir: /app
    container_name: "${REPORT_CLIENT_NAME}"
    restart: "always"
    volumes:
      - "${SHARED_DATA_VOL}:/shared-data"
      - "${REPORT_CLIENT_DIR}:/app"
    command: > 
      bash -c "npm install && ng serve --host 0.0.0.0 --port 4200"
    ports: 
      - "${REPORT_CLIENT_PORT}:4200"
      - "${REPORT_CLIENT_DEBUG_PORT}:5858"
    networks:
      - net

  # TerraMA2 DB
  pg:
    image: mdillon/postgis
    container_name: "${PG_NAME}"
    restart: always
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - "${SHARED_DATA_VOL}:/shared-data"
      - "${PG_VOL}:/var/lib/postgresql/data"
    environment: 
      - "POSTGRES_PASSWORD=${PG_PASSWORD}"
    networks:
      - net

  # TerraMA2 Geoserver
  geoserver:
    image: terrama2/geoserver:2.11
    container_name: "${GEOSERVER_NAME}"
    restart: always
    ports:
      - "${GEOSERVER_PORT}:8080"
    volumes:
      - "${SHARED_DATA_VOL}:/shared-data"
      - "${GEOSERVER_DIR}:/opt/geoserver/data_dir"
      - "./geoserver_conf/terrama2_geoserver_setenv.sh:/usr/local/tomcat/bin/setenv.sh"
    environment: 
      - "GEOSERVER_URL=/geoserver"
      - "GEOSERVER_DATA_DIR=/opt/geoserver/data_dir"
    networks:
      - net

networks:
  net: