version: "3"

services:

  # TerraMA2 Web Application
  webapp:
    image: "${TERRAMA2_DOCKER_REGISTRY}/terrama2-webapp:${TERRAMA2_TAG}"
    restart: unless-stopped
    ports:
      - "${TERRAMA2_WEBAPP_ADDRESS}:36000"
    volumes:
      - "${TERRAMA2_DATA_DIR}:/data"
      - "shared_vol:/shared-data"
      - "${TERRAMA2_CONFIG_DIR}/terrama2_webapp_db.json:/opt/terrama2/${TERRAMA2_TAG}/webapp/config/db.json"
      - "${TERRAMA2_CONFIG_DIR}/terrama2_webapp_settings.json:/opt/terrama2/${TERRAMA2_TAG}/webapp/config/settings.json"
      - "${TERRAMA2_CONFIG_DIR}/.pgpass:/root/.pgpass"
    networks:
      - net

  # TerraMA2 Web Monitor
  webmonitor:
    image: "${TERRAMA2_DOCKER_REGISTRY}/terrama2-webmonitor:${TERRAMA2_TAG}"
    restart: unless-stopped
    ports:
      - "${TERRAMA2_WEBMONITOR_ADDRESS}:36001"
    depends_on:
      - webapp
    volumes:
      - "${TERRAMA2_DATA_DIR}:/data"
      - "shared_vol:/shared-data"
      - "${TERRAMA2_CONFIG_DIR}/terrama2_webmonitor.json:/opt/terrama2/${TERRAMA2_TAG}/webmonitor/config/instances/default.json"
      - "${TERRAMA2_CONFIG_DIR}/.pgpass:/root/.pgpass"
    networks:
      - net
    links:
      - webapp

  # TerraMA2 Collector Service using TerraMA2 Base
  collector:
    image: "${TERRAMA2_DOCKER_REGISTRY}/terrama2:${TERRAMA2_TAG}"
    restart: unless-stopped
    entrypoint:
      - /usr/local/bin/start_terrama2_service.sh
      - COLLECTOR
      - "6543"
    volumes:
      - "${TERRAMA2_DATA_DIR}:/data"
      - "shared_vol:/shared-data"
    tty: true
    networks:
      - net

  # TerraMA2 Analysis Service using TerraMA2 Base
  analysis:
    image: "${TERRAMA2_DOCKER_REGISTRY}/terrama2:${TERRAMA2_TAG}"
    restart: unless-stopped
    entrypoint:
      - /usr/local/bin/start_terrama2_service.sh
      - ANALYSIS
      - "6544"
    volumes:
      - "${TERRAMA2_DATA_DIR}:/data"
      - "shared_vol:/shared-data"
    tty: true
    networks:
      - net

  # TerraMA2 View Service using TerraMA2 Base
  view:
    image: "${TERRAMA2_DOCKER_REGISTRY}/terrama2:${TERRAMA2_TAG}"
    restart: unless-stopped
    entrypoint:
      - /usr/local/bin/start_terrama2_service.sh
      - VIEW
      - "6545"
    volumes:
      - "${TERRAMA2_DATA_DIR}:/data"
      - "shared_vol:/shared-data"
    tty: true
    networks:
      - net

  # TerraMA2 Alert Service using TerraMA2 Base
  alert:
    image: "${TERRAMA2_DOCKER_REGISTRY}/terrama2:${TERRAMA2_TAG}"
    restart: unless-stopped
    entrypoint:
      - /usr/local/bin/start_terrama2_service.sh
      - ALERT
      - "6546"
    volumes:
      - "${TERRAMA2_DATA_DIR}:/data"
      - "shared_vol:/shared-data"
    tty: true
    networks:
      - net

  # TerraMA2 Interpolator Service using TerraMA2 Base
  interpolator:
    image: "${TERRAMA2_DOCKER_REGISTRY}/terrama2:${TERRAMA2_TAG}"
    restart: unless-stopped
    entrypoint:
      - /usr/local/bin/start_terrama2_service.sh
      - INTERPOLATOR
      - "6547"
    volumes:
      - "${TERRAMA2_DATA_DIR}:/data"
      - "shared_vol:/shared-data"
    tty: true
    networks:
      - net

  # TerraMA2 DB
  pg:
    container_name: terrama2_pg
    image: mdillon/postgis
    restart: always
    ports:
      - "127.0.0.1:5433:5432"
    volumes:
      - pg_vol:/var/lib/postgresql/data
    environment: 
      - "POSTGRES_PASSWORD=postgres"
    networks:
      - net

  # TerraMA2 Geoserver
  geoserver:
    container_name: terrama2_geoserver
    image: terrama2/geoserver:2.11
    restart: always
    ports:
      - "127.0.0.1:8082:8080"
    volumes:
      - shared_vol:/shared-data
      - geoserver_vol:/opt/geoserver/data_dir
      - ./conf/terrama2_geoserver_setenv.sh:/usr/local/tomcat/bin/setenv.sh
    environment:
      - "GEOSERVER_URL=/geoserver"
      - "GEOSERVER_DATA_DIR=/opt/geoserver/data_dir"
    networks:
      - net

  report-server:
    build:
      context: .
      dockerfile: report-server/Dockerfile
    image: terrama2/report-server:1.0.0
    container_name: report-server
    restart: "always"
    environment:
        - NODE_ENV=production
    volumes:
        - ./report-server/data:/data
        - ./report-server/config.json:/app/config/config.json
        - ./report-server/geoserver-conf/config.json:/app/geoserver-conf/config.json
    ports:
        - "36027:3200"
    networks:
        - net
  
  report-client:
    build:
      context: .
      dockerfile: report-client/Dockerfile
    image: terrama2/report-client:1.0.0
    container_name: report-client
    restart: "always"
    volumes:
        - ./report-client/data:/data
    ports:
        - "36028:80"
    networks:
        - net

networks:
  net:

volumes:
  data_vol:
  geoserver_vol:
  pg_vol:
  shared_vol:
    external:
      name: terrama2_shared_vol